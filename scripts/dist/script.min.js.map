{"version":3,"sources":["script.js"],"names":["tasksContainer","document","getElementById","addTaskBtn","inputText","completedTasksColumn","taskList","addTask","addEventListener","console","log","value","newTask","createElement","alert","classList","add","draggable","push","checkMark","checkBox","checked","appendChild","completeTask","button","task","parentElement","textField","remove","priorityLabel","selectedPriority","innerText","string","priorityDropdown","capitalizeFirstLetter","charAt","readOnly","btnDiv","year","month","today","currentDateLabel","getFullYear","getCurrentDate","Date","concat","day","getMonth","editBtn","focus","deleteBtn","removedTask","indexOf","draggedTask","e","dataTransfer","target","contains","preventDefault","effectAllowed","container","y","offset","querySelectorAll","reduce","closest","child","box","getBoundingClientRect","top","height","NEGATIVE_INFINITY","element","Number","clientY","querySelector","afterElement","insertBefore","draggableElements","event"],"mappings":"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","file":"script.min.js","sourcesContent":["const tasksContainer = document.getElementById(\"tasks\");\nconst addTaskBtn = document.getElementById(\"add\");\nconst inputText = document.getElementById(\"task-input\");\nconst completedTasksColumn = document.getElementById(\"completedTasksColumn\");\n\nlet taskList = [];\n\n// Adding Task Function\naddTaskBtn.addEventListener(\"click\", addTask);\ninputText.addEventListener(\"keypress\", function (event) {\n  if (event.key === \"Enter\") {\n    addTask();\n  }\n});\n\nfunction addTask() {\n  if (inputText.value == \"\") {\n    alert(\"Kindly Enter a Task Name!\");\n    return;\n  }\n  console.log(inputText.value);\n\n  //   Create div for the new added task\n  const newTask = document.createElement(\"div\");\n  newTask.classList.add(\"task\");\n  newTask.classList.add(\"draggable\");\n  newTask.draggable = true;\n  taskList.push(newTask);\n  console.log(taskList);\n\n  // Add checkbox to each task\n  const checkBox = document.createElement(\"input\");\n  checkBox.type = \"checkbox\";\n  newTask.appendChild(checkBox);\n  const checkMark = document.createElement(\"span\");\n  checkMark.classList.add(\"checkmark\");\n  newTask.appendChild(checkMark);\n\n  checkBox.addEventListener(\"change\", function () {\n    if (checkBox.checked == true) {\n      textField.classList.add(\"completed\");\n      completeTask(this);\n    } else {\n      textField.classList.remove(\"completed\");\n    }\n  });\n\n  function completeTask(button) {\n    const task = button.parentElement;\n    task.classList.add(\"completed\");\n    button.remove(); // Remove the \"Mark as Completed\" button\n    completedTasksColumn.appendChild(task);\n  }\n\n  //Add Priority Label\n  const priorityDropdown = document.getElementById(\"priorityDropdown\");\n  const selectedPriority = priorityDropdown.value;\n  const priorityLabel = document.createElement(\"span\");\n  priorityLabel.classList.add(\"label\", \"priority\", selectedPriority);\n  priorityLabel.innerText =\n    capitalizeFirstLetter(selectedPriority) + \" Priority\";\n  console.log(selectedPriority);\n  newTask.appendChild(priorityLabel);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  // Add task input\n  const textField = document.createElement(\"input\");\n  textField.type = \"text\";\n  textField.classList.add(\"task-text\");\n  textField.readOnly = true;\n  textField.value = inputText.value;\n  newTask.appendChild(textField);\n\n  //Blur task\n  textField.addEventListener(\"blur\", function () {\n    if (textField.value == \"\") {\n      newTask.remove();\n    }\n    textField.readOnly = true;\n  });\n\n  //Create div for holding buttons\n  const btnDiv = document.createElement(\"div\");\n  btnDiv.classList.add(\"action-btn\");\n  newTask.appendChild(btnDiv);\n\n  //Add Date Label\n  const currentDateLabel = document.createElement(\"span\");\n  currentDateLabel.classList.add(\"label\", \"date\");\n  currentDateLabel.innerHTML =\n    ' <i class=\"fas fa-flag\"></i>' + getCurrentDate();\n  btnDiv.appendChild(currentDateLabel);\n\n  function getCurrentDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth() + 1;\n    const day = today.getDate();\n    return `${year}-${month < 10 ? \"0\" + month : month}-${\n      day < 10 ? \"0\" + day : day\n    }`;\n  }\n\n  //Add edit button\n  const editBtn = document.createElement(\"button\");\n  editBtn.classList.add(\"edit\");\n  //   editBtn.innerHTML =\n  //     '<img src=\"../assets/imgs/edit-icon.svg\" alt=\"edit task\" />';\n  btnDiv.appendChild(editBtn);\n\n  editBtn.addEventListener(\"click\", function () {\n    textField.readOnly = false;\n    textField.focus();\n  });\n\n  //Add delete button\n  const deleteBtn = document.createElement(\"button\");\n  deleteBtn.classList.add(\"delete\");\n  //   deleteBtn.innerHTML =\n  //     '<img src=\"../assets/imgs/delete-icon.svg\" alt=\"delete task\" />';\n  btnDiv.appendChild(deleteBtn);\n\n  deleteBtn.addEventListener(\"click\", function () {\n    const removedTask = taskList.indexOf(newTask);\n    taskList.splice(removedTask, 1);\n    newTask.remove();\n    console.log(taskList);\n  });\n\n  //Drag and Drop Implementation\n  let draggedTask = null;\n\n  tasksContainer.addEventListener(\"dragstart\", (e) => {\n    if (e.target.classList.contains(\"task\")) {\n      draggedTask = e.target;\n      draggedTask.classList.add(\"dragging\");\n      e.dataTransfer.effectAllowed = \"move\";\n    }\n  });\n\n  tasksContainer.addEventListener(\"dragover\", (e) => {\n    e.preventDefault();\n    const afterElement = getDragAfterElement(tasksContainer, e.clientY);\n    const draggable = document.querySelector(\".task.dragging\");\n\n    if (draggable) {\n      if (afterElement == null) {\n        tasksContainer.appendChild(draggable);\n      } else {\n        tasksContainer.insertBefore(draggable, afterElement);\n      }\n    }\n  });\n\n  tasksContainer.addEventListener(\"dragend\", () => {\n    if (draggedTask) {\n      draggedTask.classList.remove(\"dragging\");\n      draggedTask = null;\n    }\n  });\n\n  function getDragAfterElement(container, y) {\n    const draggableElements = [\n      ...container.querySelectorAll(\".task:not(.dragging)\"),\n    ];\n\n    return draggableElements.reduce(\n      (closest, child) => {\n        const box = child.getBoundingClientRect();\n        const offset = y - box.top - box.height / 2;\n\n        if (offset < 0 && offset > closest.offset) {\n          return { offset, element: child };\n        } else {\n          return closest;\n        }\n      },\n      { offset: Number.NEGATIVE_INFINITY }\n    ).element;\n  }\n\n  tasksContainer.appendChild(newTask);\n  inputText.value = \"\";\n}\n"]}